@page
@model crudsweb3.Pages.DetailsModel
@{
    ViewData["Title"] = "Detalles de la tarea";
}

<div class="container py-4">
    <div class="d-flex align-items-center mb-4">
        <a asp-page="./Index" class="btn btn-back me-3">
            <i class="fas fa-arrow-left"></i>
        </a>
        <div>
            <h1 class="h3 m-0 title-text">Detalles de la Tarea</h1>
            <p class="text-muted mb-0">Información completa de la tarea seleccionada</p>
        </div>
    </div>

    <div class="card custom-card mb-4">
        <div class="card-header custom-card-header">
            <h5 class="m-0"><i class="fas fa-info-circle me-2"></i>Información de la Tarea</h5>
        </div>
        <div class="card-body">
            <div class="detail-grid">
                <div class="detail-item">
                    <div class="detail-label">
                        <i class="fas fa-tag me-2"></i>@Html.DisplayNameFor(m => m.Tarea.nombreTarea)
                    </div>
                    <div class="detail-value">@Html.DisplayFor(m => m.Tarea.nombreTarea)</div>
                </div>

                <div class="detail-item">
                    <div class="detail-label">
                        <i class="fas fa-calendar-day me-2"></i>@Html.DisplayNameFor(m => m.Tarea.fechaVencimiento)
                    </div>
                    <div class="detail-value">
                        @{
                            var fechaFormateada = string.Format("{0:dd/MM/yyyy HH:mm}", Model.Tarea.fechaVencimiento);
                        }
                        <span class="date-badge">@fechaFormateada</span>
                    </div>
                </div>

                <div class="detail-item">
                    <div class="detail-label">
                        <i class="fas fa-status me-2"></i>@Html.DisplayNameFor(m => m.Tarea.estado)
                    </div>
                    <div class="detail-value">
                        @{
                            var est = (Model.Tarea.estado ?? string.Empty).Trim();
                            var e = est.ToUpperInvariant();
                            var badge = "badge-secondary";
                            var icon = "fa-circle";

                            if (e == "PENDIENTE")
                            {
                                badge = "badge-warning";
                                icon = "fa-clock";
                            }
                            else if (e == "COMPLETO" || e == "COMPLETA" || e == "ACTIVO" || e == "ACTIVA")
                            {
                                badge = "badge-success";
                                icon = "fa-check-circle";
                            }
                            else if (e == "INACTIVO" || e == "CANCELADO" || e == "VENCIDO")
                            {
                                badge = "badge-danger";
                                icon = "fa-times-circle";
                            }
                        }
                        <span class="badge @badge status-badge">
                            <i class="fas @icon me-1"></i> @est
                        </span>
                    </div>
                </div>

                <div class="detail-item">
                    <div class="detail-label">
                        <i class="fas fa-user me-2"></i>@Html.DisplayNameFor(m => m.Tarea.IdUsuario)
                    </div>
                    <div class="detail-value">
                        <span class="user-badge">@Html.DisplayFor(m => m.Tarea.IdUsuario)</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="d-flex gap-3">
        <a asp-page="./Edit" asp-route-id="@Model.Tarea.Id" class="btn btn-primary btn-custom">
            <i class="fas fa-edit me-2"></i>Editar Tarea
        </a>
        <a asp-page="./Index" class="btn btn-outline-secondary btn-custom-outline">
            <i class="fas fa-list me-2"></i>Volver a la Lista
        </a>
    </div>
</div>

<style>
    .title-text {
        color: #4a4a8c;
        font-weight: 700;
    }

    .btn-back {
        background-color: #f8f9ff;
        border: 1px solid #e2e8f0;
        border-radius: 8px;
        color: #4a5568;
        width: 42px;
        height: 42px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s;
    }

        .btn-back:hover {
            background-color: #edf2f7;
            transform: translateX(-2px);
        }

    .custom-card {
        border: none;
        border-radius: 12px;
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.05);
        overflow: hidden;
    }

    .custom-card-header {
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
        border-bottom: none;
        padding: 16px 20px;
        font-weight: 600;
        color: white;
    }

    .detail-grid {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .detail-item {
        display: flex;
        align-items: center;
        padding: 12px 0;
        border-bottom: 1px solid #f1f3f6;
    }

        .detail-item:last-child {
            border-bottom: none;
        }

    .detail-label {
        flex: 0 0 250px;
        font-weight: 600;
        color: #4a5568;
        display: flex;
        align-items: center;
    }

    .detail-value {
        flex: 1;
        color: #2d3748;
        font-weight: 500;
    }

    .date-badge {
        background-color: #f3f6ff;
        padding: 8px 16px;
        border-radius: 20px;
        font-size: 0.95rem;
        color: #4a4a8c;
        font-weight: 500;
        display: inline-block;
    }

    .user-badge {
        background-color: #edf2f7;
        padding: 8px 16px;
        border-radius: 20px;
        font-size: 0.95rem;
        color: #4a5568;
        font-weight: 500;
        display: inline-block;
    }

    .status-badge {
        padding: 10px 16px;
        border-radius: 20px;
        font-size: 0.9rem;
        font-weight: 500;
    }

    .badge-success {
        background-color: rgba(40, 167, 69, 0.15) !important;
        color: #28a745;
    }

    .badge-warning {
        background-color: rgba(255, 193, 7, 0.15) !important;
        color: #ffc107;
    }

    .badge-danger {
        background-color: rgba(220, 53, 69, 0.15) !important;
        color: #dc3545;
    }

    .badge-secondary {
        background-color: rgba(108, 117, 125, 0.15) !important;
        color: #6c757d;
    }

    /* Botones */
    .btn-custom {
        padding: 12px 24px;
        border-radius: 10px;
        font-weight: 600;
        transition: all 0.3s;
        border: none;
        background: linear-gradient(135deg, #6a11cb 0%, #2575fc 100%);
    }

        .btn-custom:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(106, 17, 203, 0.2);
        }

    .btn-custom-outline {
        padding: 12px 24px;
        border-radius: 10px;
        font-weight: 600;
        transition: all 0.3s;
        border: 1px solid #e2e8f0;
        color: #4a5568;
    }

        .btn-custom-outline:hover {
            background-color: #f8f9ff;
            border-color: #cbd5e0;
            color: #4a5568;
            transform: translateY(-2px);
        }
</style>

<!-- iconos -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
